import numpy as np
import matplotlib.pyplot as plt
from matplotlib.patches import FancyArrow

# Create figure and axis
fig, ax = plt.subplots(figsize=(6,6))
ax.set_xlim(-1.3, 1.3)
ax.set_ylim(-1.3, 1.3)
ax.set_aspect('equal')

# Draw unit circle
theta = np.linspace(0, 2*np.pi, 300)
ax.plot(np.cos(theta), np.sin(theta), 'k')

# Define point on the circle at 135 degrees (Q2)
angle = 3*np.pi / 4  # 135 degrees or 3pi/4 radians
x, y = np.cos(angle), np.sin(angle)
ax.plot(x, y, 'ko', markersize=6)  # Point (x, y)

# Draw reference lines
ax.plot([0, x], [0, y], 'k-', lw=1)  # Line from origin to point
ax.plot([x, x], [0, y], 'k--', lw=1)  # Vertical line
#ax.plot([0, x], [y, y], 'k--', lw=1)  # Horizontal line

# Add theta angle annotation with a bigger curve
ax.annotate(r'$\theta$', xy=(-0.3, 0.05), fontsize=14)
ax.plot([0.2*np.cos(t) for t in np.linspace(0, angle, 20)],
        [0.2*np.sin(t) for t in np.linspace(0, angle, 20)], 'k')

# Label x and y components of the triangle
ax.annotate(r'$x$', xy=(x/2, -0.1), fontsize=15)
ax.annotate(r'$y$', xy=(x - 0.1, y/2), fontsize=15)  # Move y closer to vertical line
ax.annotate(r'$(x,y)$', xy=(x-0.15, y+0.05), fontsize=12)

# Label hypotenuse as r
ax.annotate(r'$r$', xy=(x/1.8, y/1.8), fontsize=15)  # Centered on hypotenuse

# Label edge of the circle as 1 only in Q2 and hypotenuse
ax.annotate(r'$1$', xy=(-1.1, 0), fontsize=12)
ax.annotate(r'$1$', xy=(0, 1.05), fontsize=12)

# Label axes at edges
ax.set_xticks([])
ax.set_yticks([])

# Remove default axis lines
ax.spines['left'].set_visible(False)
ax.spines['bottom'].set_visible(False)
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)

# Add fancy arrows for both ends of X and Y axes
ax.add_patch(FancyArrow(-1.2, 0, 2.4, 0, width=0.01, head_width=0.07, head_length=0.07, color='black'))  # X-axis arrow left to right
ax.add_patch(FancyArrow(1.2, 0, -2.4, 0, width=0.01, head_width=0.07, head_length=0.07, color='black'))  # X-axis arrow right to left
ax.add_patch(FancyArrow(0, -1.2, 0, 2.4, width=0.01, head_width=0.07, head_length=0.07, color='black'))  # Y-axis arrow bottom to top
ax.add_patch(FancyArrow(0, 1.2, 0, -2.4, width=0.01, head_width=0.07, head_length=0.07, color='black'))  # Y-axis arrow top to bottom

# Show plot
plt.show()
